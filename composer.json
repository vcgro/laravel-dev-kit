{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": [
        "laravel",
        "framework"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.4",
        "laravel/framework": "^12.0",
        "laravel/tinker": "^2.10.1"
    },
    "require-dev": {
        "driftingly/rector-laravel": "^2.0",
        "fakerphp/faker": "^1.23",
        "larastan/larastan": "^3.4",
        "laravel/pail": "^1.2",
        "laravel/pint": "^1.22",
        "laravel/sail": "^1.43",
        "laravel/telescope": "^5.8",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.6",
        "peckphp/peck": "^0.1.3",
        "pestphp/pest": "^3.8",
        "phpstan/phpstan": "^2.1",
        "phpunit/phpunit": "^11.5",
        "rector/rector": "^2.0",
        "squizlabs/php_codesniffer": "^3.13"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"npm run dev\" --names=server,queue,logs,vite"
        ],
        "test": [
            "@php artisan config:clear --ansi",
            "@php artisan test --parallel"
        ],
        "test:feature": "@php artisan test --testsuite=Feature",
        "test:unit": "@php artisan test --testsuite=Unit",
        "test:arch": "@php artisan test --testsuite=Architecture",
        "install:telescope": [
            "@php artisan telescope:install",
            "mv \"$(find database/migrations -name '*_create_telescope_entries_table.php')\" database/migrations/0001_01_01_000003_create_telescope_entries_table.php"
        ],
        "phpstan": "vendor/bin/phpstan analyse --memory-limit=-1",
        "pint": "vendor/bin/pint",
        "pint:check": "vendor/bin/pint --test",
        "phpcbf": "vendor/bin/phpcbf",
        "phpcs": "vendor/bin/phpcs",
        "rector": "vendor/bin/rector process --clear-cache",
        "rector:check": "vendor/bin/rector process --clear-cache --dry-run",
        "peck": "vendor/bin/peck",
        "quality-make": [
            "@php -r \"echo '▶ Running Pint...\n';\"",
            "composer pint",
            "@php -r \"echo '▶ Running PHP Code Beautifier\n...\n';\"",
            "composer phpcbf",
            "@php -r \"echo '▶ Running Rector...\n';\"",
            "composer rector"
        ],
        "quality-check": [
            "@php -r \"echo '▶ Running spell checking...\n';\"",
            "composer peck",
            "@php -r \"echo '▶ Running PHPStan...\n';\"",
            "composer phpstan",
            "@php -r \"echo '▶ Running Pint checking...\n';\"",
            "composer pint:check",
            "@php -r \"echo '▶ Running PHP CodeSniffer...\n';\"",
            "composer phpcs",
            "@php -r \"echo '▶ Running Rector checking...\n';\"",
            "composer rector:check",
            "@php -r \"echo '▶ Running architecture tests...\n';\"",
            "composer test:arch"
        ]
    },
    "scripts-descriptions": {
        "test:arch": "Run Pest architectural tests",
        "install:telescope": "Install Laravel Telescope and rename its migration to a fixed timestamp",
        "phpstan": "Run PHPStan with unlimited memory",
        "pint": "Fix code style issues using Laravel Pint",
        "pint:check": "Check code style without making changes using Laravel Pint",
        "phpcbf": "Automatically fix coding standard violations using PHP_CodeSniffer",
        "phpcs": "Check code for coding standard violations using PHP_CodeSniffer",
        "rector": "Apply automated code refactorings using Rector",
        "rector:check": "Preview code refactorings using Rector",
        "quality-make": "Run all code fixers",
        "quality-check": "Run all code quality tools"
    },
    "extra": {
        "laravel": {
            "dont-discover": [
                "laravel/telescope"
            ]
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
